package com.mycompany.editortexto;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;

/**
 *
 * @author chris
 */
public class Notepad extends javax.swing.JFrame {
    String nombreArchivo;
    String pathArchivo;

    @Override
    public void setType(Type type) {
        super.setType(type); //To change body of generated methods, choose Tools | Templates.
    }
    
    public Notepad() {
        initComponents();
        guardar.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK));
        guardarComo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_G, InputEvent.CTRL_DOWN_MASK));
        nuevo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
        abrir.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, InputEvent.CTRL_DOWN_MASK));
        colorTexto.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_T, InputEvent.CTRL_DOWN_MASK));
        salir.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, InputEvent.CTRL_DOWN_MASK));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog = new javax.swing.JDialog();
        colores = new javax.swing.JColorChooser();
        botonColor = new javax.swing.JButton();
        panel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        panel2 = new javax.swing.JPanel();
        labelsize = new javax.swing.JLabel();
        labelpath = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        nuevo = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        guardarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        formato = new javax.swing.JMenu();
        fuente = new javax.swing.JMenu();
        arial = new javax.swing.JMenuItem();
        comicSans = new javax.swing.JMenuItem();
        timesNew = new javax.swing.JMenuItem();
        calibri = new javax.swing.JMenuItem();
        pesoFuente = new javax.swing.JMenu();
        font12 = new javax.swing.JMenuItem();
        font14 = new javax.swing.JMenuItem();
        font16 = new javax.swing.JMenuItem();
        font20 = new javax.swing.JMenuItem();
        font24 = new javax.swing.JMenuItem();
        font32 = new javax.swing.JMenuItem();
        mayusculas = new javax.swing.JMenuItem();
        minusculas = new javax.swing.JMenuItem();
        color = new javax.swing.JMenu();
        colorTexto = new javax.swing.JMenuItem();
        acerca = new javax.swing.JMenu();

        dialog.getContentPane().add(colores, java.awt.BorderLayout.CENTER);

        botonColor.setText("Aceptar");
        botonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonColorActionPerformed(evt);
            }
        });
        dialog.getContentPane().add(botonColor, java.awt.BorderLayout.SOUTH);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(130, 150));
        setPreferredSize(new java.awt.Dimension(899, 444));

        panel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel1.setLayout(new java.awt.BorderLayout());

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        panel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(panel1, java.awt.BorderLayout.CENTER);

        panel2.setLayout(new java.awt.BorderLayout());

        labelsize.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        panel2.add(labelsize, java.awt.BorderLayout.EAST);
        panel2.add(labelpath, java.awt.BorderLayout.WEST);

        getContentPane().add(panel2, java.awt.BorderLayout.SOUTH);

        archivo.setText("Archivo");

        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        archivo.add(nuevo);

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        archivo.add(abrir);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        archivo.add(guardar);

        guardarComo.setText("Guardar como");
        guardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarComoActionPerformed(evt);
            }
        });
        archivo.add(guardarComo);
        archivo.add(jSeparator1);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        archivo.add(salir);

        menu.add(archivo);

        formato.setText("Formato");

        fuente.setText("Fuente");

        arial.setText("Arial");
        arial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arialActionPerformed(evt);
            }
        });
        fuente.add(arial);

        comicSans.setText("Comic Sans");
        comicSans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comicSansActionPerformed(evt);
            }
        });
        fuente.add(comicSans);

        timesNew.setText("Times New Roman");
        timesNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesNewActionPerformed(evt);
            }
        });
        fuente.add(timesNew);

        calibri.setText("Calibri");
        calibri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calibriActionPerformed(evt);
            }
        });
        fuente.add(calibri);

        formato.add(fuente);

        pesoFuente.setText("Tamaño Fuente");

        font12.setText("12");
        font12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font12ActionPerformed(evt);
            }
        });
        pesoFuente.add(font12);

        font14.setText("14");
        font14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font14ActionPerformed(evt);
            }
        });
        pesoFuente.add(font14);

        font16.setText("16");
        font16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font16ActionPerformed(evt);
            }
        });
        pesoFuente.add(font16);

        font20.setText("20");
        font20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font20ActionPerformed(evt);
            }
        });
        pesoFuente.add(font20);

        font24.setText("24");
        font24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font24ActionPerformed(evt);
            }
        });
        pesoFuente.add(font24);

        font32.setText("32");
        font32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                font32ActionPerformed(evt);
            }
        });
        pesoFuente.add(font32);

        formato.add(pesoFuente);

        mayusculas.setText("Pasar mayúsculas");
        mayusculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mayusculasActionPerformed(evt);
            }
        });
        formato.add(mayusculas);

        minusculas.setText("Pasar minúsculas");
        minusculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusculasActionPerformed(evt);
            }
        });
        formato.add(minusculas);

        menu.add(formato);

        color.setText("Color");

        colorTexto.setText("Color texto");
        colorTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorTextoActionPerformed(evt);
            }
        });
        color.add(colorTexto);

        menu.add(color);

        acerca.setText("Acerca de...");
        acerca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acercaMouseClicked(evt);
            }
        });
        menu.add(acerca);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        texto.setText("");
        this.setTitle("Nuevo");
    }//GEN-LAST:event_nuevoActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        FileDialog fd = new FileDialog(this, "Abrir", FileDialog.LOAD);
        fd.setVisible(true);

        if (fd.getFile() != null) {
            nombreArchivo = fd.getFile();
            pathArchivo = fd.getDirectory();
            this.setTitle(nombreArchivo);
        }

        try {
            BufferedReader br = new BufferedReader(new FileReader(pathArchivo + nombreArchivo));
            texto.setText("");
            String line = null;

            while ((line = br.readLine()) != null) {
                texto.append(line + "\n");
            }
            br.close();
            File myFile = new File(pathArchivo + nombreArchivo);
            long size = myFile.length();

            labelpath.setText(pathArchivo + nombreArchivo);
            labelsize.setText("" + size+" Bytes");
        } catch (Exception e) {
            System.out.println("Algo has hecho malamente que te ha petao.");
        }


    }//GEN-LAST:event_abrirActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void acercaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acercaMouseClicked
        JOptionPane.showMessageDialog(null,"Trabajo realizado por Christopher González Martín.");
    }//GEN-LAST:event_acercaMouseClicked

    private void guardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarComoActionPerformed
        FileDialog fd = new FileDialog(this, "Abrir", FileDialog.LOAD);
        fd.setVisible(true);

        if (fd.getFile() != null) {
            nombreArchivo = fd.getFile();
            pathArchivo = fd.getDirectory();
            this.setTitle(nombreArchivo);
        }

        try {
            FileWriter fw = new FileWriter(pathArchivo + nombreArchivo);
            fw.write(texto.getText());
            fw.close();
            
            File myFile = new File(pathArchivo + nombreArchivo);
            long peso = myFile.length();
                
            labelsize.setText("" + peso + " Bytes");
            
        } catch (Exception e) {
            System.out.println("Algo has hecho malamente que te ha petao.");
        }
        
    }//GEN-LAST:event_guardarComoActionPerformed
   
    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
       if (nombreArchivo== null) {
        FileDialog fd = new FileDialog(this, "Abrir", FileDialog.LOAD);
        fd.setVisible(true);

        if (fd.getFile() != null) {
            nombreArchivo = fd.getFile();
            pathArchivo = fd.getDirectory();
            this.setTitle(nombreArchivo);
        }

        try {
            FileWriter fw = new FileWriter(pathArchivo + nombreArchivo);
            fw.write(texto.getText());
            fw.close();
            
        } catch (Exception e) {
            System.out.println("Algo has hecho malamente que te ha petao.");
        } 
        }else {
            try {
                FileWriter escritor = new FileWriter(pathArchivo + nombreArchivo);
                escritor.write(texto.getText());
                this.setTitle(nombreArchivo);
                
                escritor.close();
                
                File myFile = new File(pathArchivo + nombreArchivo);
                long peso = myFile.length();
                
                labelsize.setText("" + peso + " Bytes");

            } catch (Exception e) {

                System.out.println("Algo has hecho malamente que te ha petao.");
            }

        }
        
    }//GEN-LAST:event_guardarActionPerformed

    private void colorTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorTextoActionPerformed
        dialog.setSize(400, 400);
        dialog.setVisible(true);
    }//GEN-LAST:event_colorTextoActionPerformed

    private void arialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arialActionPerformed
        Font fuente = new Font("Arial", texto.getFont().getStyle(), texto.getFont().getSize());
        texto.setFont(fuente);
    }//GEN-LAST:event_arialActionPerformed

    private void comicSansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comicSansActionPerformed
        Font fuente = new Font("Comic Sans MS", texto.getFont().getStyle(), texto.getFont().getSize());
        texto.setFont(fuente);
    }//GEN-LAST:event_comicSansActionPerformed

    private void timesNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timesNewActionPerformed
        Font fuente = new Font("Times New Roman", texto.getFont().getStyle(), texto.getFont().getSize());
        texto.setFont(fuente);
    }//GEN-LAST:event_timesNewActionPerformed

    private void font14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font14ActionPerformed
        Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 14);
        texto.setFont(fuente);
    }//GEN-LAST:event_font14ActionPerformed

    private void font16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font16ActionPerformed
        Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 16);
        texto.setFont(fuente);
    }//GEN-LAST:event_font16ActionPerformed

    private void font20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font20ActionPerformed
       Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 20);
        texto.setFont(fuente);
    }//GEN-LAST:event_font20ActionPerformed

    private void font24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font24ActionPerformed
        Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 24);
        texto.setFont(fuente);
    }//GEN-LAST:event_font24ActionPerformed

    private void font32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font32ActionPerformed
        Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 32);
        texto.setFont(fuente);
    }//GEN-LAST:event_font32ActionPerformed

    private void botonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonColorActionPerformed
        texto.setForeground(colores.getColor());
    }//GEN-LAST:event_botonColorActionPerformed

    private void mayusculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mayusculasActionPerformed
        texto.setText(texto.getText().toUpperCase());
    }//GEN-LAST:event_mayusculasActionPerformed

    private void minusculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusculasActionPerformed
        texto.setText(texto.getText().toLowerCase());
    }//GEN-LAST:event_minusculasActionPerformed

    private void font12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_font12ActionPerformed
        Font fuente = new Font(texto.getFont().getFontName(), texto.getFont().getStyle(), 12);
        texto.setFont(fuente);
    }//GEN-LAST:event_font12ActionPerformed

    private void calibriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calibriActionPerformed
        Font fuente = new Font("Calibri", texto.getFont().getStyle(), texto.getFont().getSize());
        texto.setFont(fuente);
    }//GEN-LAST:event_calibriActionPerformed

   
    public static void main(String args[]) {
       
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenu acerca;
    private javax.swing.JMenu archivo;
    private javax.swing.JMenuItem arial;
    private javax.swing.JButton botonColor;
    private javax.swing.JMenuItem calibri;
    private javax.swing.JMenu color;
    private javax.swing.JMenuItem colorTexto;
    private javax.swing.JColorChooser colores;
    private javax.swing.JMenuItem comicSans;
    private javax.swing.JDialog dialog;
    private javax.swing.JMenuItem font12;
    private javax.swing.JMenuItem font14;
    private javax.swing.JMenuItem font16;
    private javax.swing.JMenuItem font20;
    private javax.swing.JMenuItem font24;
    private javax.swing.JMenuItem font32;
    private javax.swing.JMenu formato;
    private javax.swing.JMenu fuente;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenuItem guardarComo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelpath;
    private javax.swing.JLabel labelsize;
    private javax.swing.JMenuItem mayusculas;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem minusculas;
    private javax.swing.JMenuItem nuevo;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JMenu pesoFuente;
    private javax.swing.JMenuItem salir;
    private javax.swing.JTextArea texto;
    private javax.swing.JMenuItem timesNew;
    // End of variables declaration//GEN-END:variables
}
